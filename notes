mlx init
mlx loop
mlc new window
mlx new image
recolorier en fonction des input



FOV = 60

H = 640
W = 320

nbRays = W;
pasRay = FOV / W

to radian = pi / 180 * degree7

vecs:

vectors struct :
          rays[W][2];
          0 -> x.y = pos_camera
          1 -> x.y =
                  posrayon.x : pos_cam.x + (raylength * cos(angle+FOV)/2) - i-(m_fov/W));
                  posrayon.y : pos_cam.y + (raylength * sin(angle+FOV)/2) - i-(m_fov/W));

t_vector
{
  double posx;
  double poy;
  double pox2;
  double posy2;
 }

 deplacement:
 position.x += dcos(angle*speedmove);
          .y -= sin()


 if (angle >360)  angle = 0
 if (angle < 0) angle = 360

 du coup si N : angle = 0
            E : angle = 90
            S : angle = 180;
            W : angle = 180 + 90


hp -> htex
R  -> 1
